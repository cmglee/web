<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" xmlns="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     width="100%" height="100%" viewBox="-256 -256 512 512" onload="main(evt)">
 <title>Clock in SVG animation</title>
 <desc>Analogue and digital clock animated in SVG/ECMAScript by CMG Lee.</desc>
 <defs>
  <path id="tick" d="M 0 -240 V -250"/>
  <g id="tick5">
   <use xlink:href="#tick" stroke-width="8" />
   <use xlink:href="#tick" transform="rotate(6)"/>
   <use xlink:href="#tick" transform="rotate(12)"/>
   <use xlink:href="#tick" transform="rotate(18)"/>
   <use xlink:href="#tick" transform="rotate(24)"/>
  </g>
  <g id="tick15">
   <use xlink:href="#tick5"/>
   <use xlink:href="#tick5" transform="rotate(30)"/>
   <use xlink:href="#tick5" transform="rotate(60)"/>
  </g>
  <g id="ticks">
   <use xlink:href="#tick15"/>
   <use xlink:href="#tick15" transform="rotate(90)"/>
   <use xlink:href="#tick15" transform="rotate(180)"/>
   <use xlink:href="#tick15" transform="rotate(270)"/>
  </g>
  <text id="time"     x="0" y="35" fill="#ffffff"></text>
  <text id="time_old" x="0" y="35" fill="#ffffff"></text>
 </defs>
 <script type="text/ecmascript">
  var seconds_old = -1, time_old = '';
  var obj_second, obj_minute, obj_hour, obj_time, obj_time_old;
  function bounce(x) {
   return -20 * (x - 0.1) * (x - 0.5) * (x - 0.8) * (x - 1);
  }
  function opacity(x) {
   return 1 - Math.pow(2, 2 * x - 2);
  }
  function run() {
   var date = new Date();
   var time = date.getTime();
   var seconds = date.getSeconds();
   seconds_fraction = time * 0.001;
   seconds_fraction -= Math.floor(seconds_fraction);
   obj_second.setAttribute('transform', 'rotate(' +
                           (seconds + bounce(seconds_fraction)) * 6 + ')');
   obj_time.setAttribute('opacity', opacity(1 - seconds_fraction));
   obj_time_old.setAttribute('opacity', opacity(seconds_fraction));
   if (seconds_old != seconds) {
    var minutes = date.getMinutes();
    var hours   = date.getHours();
    var date_next = new Date(time - 1000);
    var seconds_next = date_next.getSeconds();
    var minutes_next = date_next.getMinutes();
    var hours_next   = date_next.getHours();
    var time = (hours   > 9 ? '' : '0') + hours   + ':' +
               (minutes > 9 ? '' : '0') + minutes + ':' +
               (seconds > 9 ? '' : '0') + seconds;
    obj_time.textContent = time;
    obj_time_old.textContent = time_old ? time_old : time;
    obj_minute.setAttribute('transform', 'rotate(' +
                            (minutes * 6 + seconds * 0.1) + ')');
    obj_hour.setAttribute('transform', 'rotate(' +
                          (hours * 30 + minutes * 0.5 + seconds * 0.008) + ')');
    time_old = time;
    seconds_old = seconds;
   }
   setTimeout(run, 99);
  }
  window.run = run;
  function main(evt) {
   obj_second    = evt.target.ownerDocument.getElementById('second');
   obj_minute    = evt.target.ownerDocument.getElementById('minute');
   obj_hour      = evt.target.ownerDocument.getElementById('hour');
   obj_time      = evt.target.ownerDocument.getElementById('time');
   obj_time_old  = evt.target.ownerDocument.getElementById('time_old');
   run();
  }
 </script>
 <g font-family="monospace" font-weight="bold"
    font-size="96" letter-spacing="-10" text-anchor="middle"
    stroke-width="4" stroke-linejoin="round" stroke-linecap="round"
    stroke="#000000">
  <use xlink:href="#ticks" opacity="0.5"/>
  <use xlink:href="#time"     stroke-width="5" stroke-opacity="0.5"/>
  <use xlink:href="#time_old" stroke-width="5" stroke-opacity="0.5"/>
  <path id="second" d="M 0 0 V -230" stroke-width="8"  opacity="0.8"/>
  <path id="minute" d="M 0 0 V -200" stroke-width="12" opacity="0.6"/>
  <path id="hour"   d="M 0 0 V -130" stroke-width="16" opacity="0.4"/>
  <use xlink:href="#time"     stroke-width="2"/>
  <use xlink:href="#time_old" stroke-width="2"/>
 </g>
</svg>
